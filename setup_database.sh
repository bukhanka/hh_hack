#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
DB_HOST="localhost"
DB_PORT="5432"
DB_NAME="finhack"
DB_USER="radar_user"
DB_PASSWORD="radar_password_2024"
CONTAINER_NAME="finhack_postgres"

echo -e "${GREEN}üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Finhack${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
echo -e "${YELLOW}[1/6]${NC} –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker: https://docs.docker.com/get-docker/"
    exit 1
fi

if ! docker info &> /dev/null; then
    echo -e "${RED}‚ùå Docker daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω!${NC}"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi
echo -e "${GREEN}‚úì${NC} Docker —Ä–∞–±–æ—Ç–∞–µ—Ç"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose
echo -e "${YELLOW}[2/6]${NC} –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose..."
if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
    echo -e "${RED}‚ùå docker-compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
    exit 1
fi
echo -e "${GREEN}‚úì${NC} docker-compose –¥–æ—Å—Ç—É–ø–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ PostgreSQL
echo -e "${YELLOW}[3/6]${NC} –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ PostgreSQL..."
if docker ps -a --format '{{.Names}}' | grep -q "^${CONTAINER_NAME}$"; then
    CONTAINER_STATUS=$(docker inspect -f '{{.State.Status}}' ${CONTAINER_NAME})
    if [ "$CONTAINER_STATUS" = "running" ]; then
        echo -e "${GREEN}‚úì${NC} –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä ${CONTAINER_NAME} —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
    else
        echo -e "${YELLOW}‚ö†${NC} –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä ${CONTAINER_NAME} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º..."
        docker start ${CONTAINER_NAME}
        sleep 3
    fi
else
    echo -e "${YELLOW}‚ö†${NC} –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—ë–º —á–µ—Ä–µ–∑ docker-compose..."
    if [ -f "docker-compose.yml" ]; then
        docker-compose up -d
    else
        echo -e "${RED}‚ùå –§–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        exit 1
    fi
fi

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ë–î
echo -e "${YELLOW}[4/6]${NC} –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
MAX_ATTEMPTS=30
ATTEMPT=0

while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
    if docker exec ${CONTAINER_NAME} pg_isready -U ${DB_USER} -d ${DB_NAME} &> /dev/null; then
        echo -e "${GREEN}‚úì${NC} PostgreSQL –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
        break
    fi
    ATTEMPT=$((ATTEMPT + 1))
    echo -n "."
    sleep 1
done

if [ $ATTEMPT -eq $MAX_ATTEMPTS ]; then
    echo -e "\n${RED}‚ùå –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è PostgreSQL${NC}"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker logs ${CONTAINER_NAME}"
    exit 1
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –Ω–∞–ª–∏—á–∏—è –ë–î
echo -e "${YELLOW}[5/6]${NC} –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ë–î —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
DB_EXISTS=$(docker exec ${CONTAINER_NAME} psql -U ${DB_USER} -lqt | cut -d \| -f 1 | grep -w ${DB_NAME} | wc -l)

if [ "$DB_EXISTS" -eq "1" ]; then
    echo -e "${GREEN}‚úì${NC} –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '${DB_NAME}' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
    echo -e "${RED}‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '${DB_NAME}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
    echo "–°–æ–∑–¥–∞—ë–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
    docker exec ${CONTAINER_NAME} psql -U ${DB_USER} -c "CREATE DATABASE ${DB_NAME};" &> /dev/null
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úì${NC} –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞"
    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö${NC}"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
USER_EXISTS=$(docker exec ${CONTAINER_NAME} psql -U postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='${DB_USER}'")

if [ "$USER_EXISTS" = "1" ]; then
    echo -e "${GREEN}‚úì${NC} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '${DB_USER}' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
    echo -e "${YELLOW}‚ö†${NC} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '${DB_USER}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—ë–º..."
    docker exec ${CONTAINER_NAME} psql -U postgres -c "CREATE USER ${DB_USER} WITH PASSWORD '${DB_PASSWORD}';" &> /dev/null
    docker exec ${CONTAINER_NAME} psql -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE ${DB_NAME} TO ${DB_USER};" &> /dev/null
    echo -e "${GREEN}‚úì${NC} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω"
fi

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
echo -e "${YELLOW}[6/6]${NC} –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."

if [ -f "backend/migrations/001_personal_news_tables.sql" ]; then
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–±–ª–∏—Ü–∞ user_profiles
    TABLE_EXISTS=$(docker exec ${CONTAINER_NAME} psql -U ${DB_USER} -d ${DB_NAME} -tAc "SELECT EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'user_profiles');")
    
    if [ "$TABLE_EXISTS" = "t" ]; then
        echo -e "${GREEN}‚úì${NC} –¢–∞–±–ª–∏—Ü—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç (–º–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —Ä–∞–Ω–µ–µ)"
    else
        echo "–ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é 001_personal_news_tables.sql..."
        docker exec -i ${CONTAINER_NAME} psql -U ${DB_USER} -d ${DB_NAME} < backend/migrations/001_personal_news_tables.sql > /dev/null 2>&1
        
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}‚úì${NC} –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
        else
            echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏${NC}"
            echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é:"
            echo "docker exec -i ${CONTAINER_NAME} psql -U ${DB_USER} -d ${DB_NAME} < backend/migrations/001_personal_news_tables.sql"
            exit 1
        fi
    fi
else
    echo -e "${YELLOW}‚ö†${NC} –§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω (backend/migrations/001_personal_news_tables.sql)"
    echo "–ü—Ä–æ–ø—É—Å–∫–∞–µ–º..."
fi

# –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo ""
echo -e "${GREEN}‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!${NC}"
echo ""
echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏:"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "  Host:     ${DB_HOST}"
echo "  Port:     ${DB_PORT}"
echo "  Database: ${DB_NAME}"
echo "  User:     ${DB_USER}"
echo "  Password: ${DB_PASSWORD}"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo ""
echo "üîó Connection String:"
echo "  postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}"
echo ""
echo "üõ†Ô∏è  –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  ‚Ä¢ –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ë–î:"
echo "    docker exec -it ${CONTAINER_NAME} psql -U ${DB_USER} -d ${DB_NAME}"
echo ""
echo "  ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:"
echo "    docker logs ${CONTAINER_NAME}"
echo ""
echo "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä:"
echo "    docker-compose down"
echo ""
echo "  ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä:"
echo "    docker-compose restart"
echo ""
echo -e "${GREEN}üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å backend!${NC}"

