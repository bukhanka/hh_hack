#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
DB_HOST="localhost"
DB_PORT="5432"
DB_NAME="finhack"
DB_USER="radar_user"
DB_PASSWORD="radar_password_2024"
POSTGRES_USER="postgres"  # –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ë–î –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

echo -e "${GREEN}üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Finhack (—Å–∏—Å—Ç–µ–º–Ω—ã–π PostgreSQL)${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
echo -e "${YELLOW}[1/5]${NC} –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL..."
if ! command -v psql &> /dev/null; then
    echo -e "${RED}‚ùå PostgreSQL (psql) –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt-get install postgresql postgresql-client"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω
if ! pg_isready -h ${DB_HOST} -p ${DB_PORT} &> /dev/null; then
    echo -e "${RED}‚ùå PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω!${NC}"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo systemctl start postgresql"
    exit 1
fi
echo -e "${GREEN}‚úì${NC} PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo -e "${YELLOW}[2/5]${NC} –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
USER_EXISTS=$(sudo -u postgres psql -tAc "SELECT 1 FROM pg_roles WHERE rolname='${DB_USER}'" 2>/dev/null)

if [ "$USER_EXISTS" = "1" ]; then
    echo -e "${GREEN}‚úì${NC} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '${DB_USER}' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
    echo "–°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '${DB_USER}'..."
    sudo -u postgres psql -c "CREATE USER ${DB_USER} WITH PASSWORD '${DB_PASSWORD}';" &> /dev/null
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úì${NC} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω"
    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è${NC}"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo -e "${YELLOW}[3/5]${NC} –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
DB_EXISTS=$(sudo -u postgres psql -lqt | cut -d \| -f 1 | grep -w ${DB_NAME} | wc -l)

if [ "$DB_EXISTS" -eq "1" ]; then
    echo -e "${GREEN}‚úì${NC} –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '${DB_NAME}' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
    echo "–°–æ–∑–¥–∞—ë–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö '${DB_NAME}'..."
    sudo -u postgres psql -c "CREATE DATABASE ${DB_NAME} OWNER ${DB_USER};" &> /dev/null
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úì${NC} –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞"
    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö${NC}"
        exit 1
    fi
fi

# –í—ã–¥–∞—á–∞ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
echo -e "${YELLOW}[4/5]${NC} –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE ${DB_NAME} TO ${DB_USER};" &> /dev/null
sudo -u postgres psql -d ${DB_NAME} -c "GRANT ALL ON SCHEMA public TO ${DB_USER};" &> /dev/null
sudo -u postgres psql -d ${DB_NAME} -c "ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO ${DB_USER};" &> /dev/null
echo -e "${GREEN}‚úì${NC} –ü—Ä–∞–≤–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
echo -e "${YELLOW}[5/5]${NC} –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."

# –ú–∏–≥—Ä–∞—Ü–∏—è 001: –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
if [ -f "backend/migrations/001_personal_news_tables.sql" ]; then
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–±–ª–∏—Ü–∞ user_profiles
    TABLE_EXISTS=$(PGPASSWORD=${DB_PASSWORD} psql -h ${DB_HOST} -U ${DB_USER} -d ${DB_NAME} -tAc "SELECT EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'user_profiles');" 2>/dev/null)
    
    if [ "$TABLE_EXISTS" = "t" ]; then
        echo -e "${GREEN}‚úì${NC} –ú–∏–≥—Ä–∞—Ü–∏—è 001 —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞"
    else
        echo "–ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é 001_personal_news_tables.sql..."
        PGPASSWORD=${DB_PASSWORD} psql -h ${DB_HOST} -U ${DB_USER} -d ${DB_NAME} < backend/migrations/001_personal_news_tables.sql > /dev/null 2>&1
        
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}‚úì${NC} –ú–∏–≥—Ä–∞—Ü–∏—è 001 –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
        else
            echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ 001${NC}"
            echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é:"
            echo "PGPASSWORD=${DB_PASSWORD} psql -h ${DB_HOST} -U ${DB_USER} -d ${DB_NAME} < backend/migrations/001_personal_news_tables.sql"
            exit 1
        fi
    fi
else
    echo -e "${YELLOW}‚ö†${NC} –§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ 001 –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "–ü—Ä–æ–ø—É—Å–∫–∞–µ–º..."
fi

# –ú–∏–≥—Ä–∞—Ü–∏—è 002: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ last_feed_check
if [ -f "backend/migrations/002_add_last_feed_check.sql" ]; then
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∫–æ–ª–æ–Ω–∫–∞ last_feed_check
    COLUMN_EXISTS=$(PGPASSWORD=${DB_PASSWORD} psql -h ${DB_HOST} -U ${DB_USER} -d ${DB_NAME} -tAc "SELECT EXISTS (SELECT FROM information_schema.columns WHERE table_name = 'user_profiles' AND column_name = 'last_feed_check');" 2>/dev/null)
    
    if [ "$COLUMN_EXISTS" = "t" ]; then
        echo -e "${GREEN}‚úì${NC} –ú–∏–≥—Ä–∞—Ü–∏—è 002 —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞"
    else
        echo "–ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é 002_add_last_feed_check.sql..."
        PGPASSWORD=${DB_PASSWORD} psql -h ${DB_HOST} -U ${DB_USER} -d ${DB_NAME} < backend/migrations/002_add_last_feed_check.sql > /dev/null 2>&1
        
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}‚úì${NC} –ú–∏–≥—Ä–∞—Ü–∏—è 002 –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
        else
            echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ 002${NC}"
            echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é:"
            echo "PGPASSWORD=${DB_PASSWORD} psql -h ${DB_HOST} -U ${DB_USER} -d ${DB_NAME} < backend/migrations/002_add_last_feed_check.sql"
            exit 1
        fi
    fi
else
    echo -e "${YELLOW}‚ö†${NC} –§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ 002 –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "–ü—Ä–æ–ø—É—Å–∫–∞–µ–º..."
fi

# –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo ""
echo -e "${GREEN}‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!${NC}"
echo ""
echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏:"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "  Host:     ${DB_HOST}"
echo "  Port:     ${DB_PORT}"
echo "  Database: ${DB_NAME}"
echo "  User:     ${DB_USER}"
echo "  Password: ${DB_PASSWORD}"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo ""
echo "üîó Connection String:"
echo "  postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}"
echo ""
echo "üõ†Ô∏è  –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  ‚Ä¢ –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ë–î:"
echo "    PGPASSWORD=${DB_PASSWORD} psql -h ${DB_HOST} -U ${DB_USER} -d ${DB_NAME}"
echo ""
echo "  ‚Ä¢ –ò–ª–∏ —á–µ—Ä–µ–∑ sudo:"
echo "    sudo -u postgres psql -d ${DB_NAME}"
echo ""
echo "  ‚Ä¢ –£–¥–∞–ª–∏—Ç—å –≤—Å—ë –∏ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ:"
echo "    sudo -u postgres psql -c \"DROP DATABASE IF EXISTS ${DB_NAME};\""
echo "    sudo -u postgres psql -c \"DROP USER IF EXISTS ${DB_USER};\""
echo ""
echo -e "${GREEN}üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å backend!${NC}"
